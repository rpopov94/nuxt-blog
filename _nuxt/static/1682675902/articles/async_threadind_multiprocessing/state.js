window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1682675902",layout:"default",error:ae,state:{articles:{article:[{layout:aj,abstract:"В статье рассмотрены многопоточность, асинхронность и многопроцессорность в Python",tags:["асинхронность","многопроцессорность","многопоточность"],image:"threading_async_and_muliprocessing.png",body:{type:"root",children:[{type:b,tag:"h1",props:{id:"многопоточность-асинхронность-и-многопроцессорность-в-python"},children:[{type:b,tag:w,props:{ariaHidden:x,href:"#%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE%D0%BF%D0%BE%D1%82%D0%BE%D1%87%D0%BD%D0%BE%D1%81%D1%82%D1%8C-%D0%B0%D1%81%D0%B8%D0%BD%D1%85%D1%80%D0%BE%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D1%8C-%D0%B8-%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE%D0%BF%D1%80%D0%BE%D1%86%D0%B5%D1%81%D1%81%D0%BE%D1%80%D0%BD%D0%BE%D1%81%D1%82%D1%8C-%D0%B2-python",tabIndex:y},children:[{type:b,tag:c,props:{className:[z,A]},children:[]}]},{type:a,value:aj}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Питон – один из самых популярных языков программирования."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"С момента первого релиза он перетерпел немало корректировок. Питон имеет поддержку разного типа потоков, благодаря чему программы на "},{type:b,tag:n,props:{},children:[{type:a,value:"python"}]},{type:a,value:" могут работать быстрее. Именно этому моменту будет посвящена статья."}]},{type:a,value:f},{type:b,tag:H,props:{id:"основные-определения"},children:[{type:b,tag:w,props:{ariaHidden:x,href:"#%D0%BE%D1%81%D0%BD%D0%BE%D0%B2%D0%BD%D1%8B%D0%B5-%D0%BE%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F",tabIndex:y},children:[{type:b,tag:c,props:{className:[z,A]},children:[]}]},{type:a,value:"Основные определения"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Вот несколько основных определений для процессов и потоков в "},{type:b,tag:n,props:{},children:[{type:a,value:t}]},{type:a,value:r}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[{type:a,value:"Процесс"}]},{type:a,value:" - экземпляр программы, выполняющейся в операционной системе. Он имеет свой собственный адресное пространство, набор файловых дескрипторов, стек вызовов, регистры процессора и т.д."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[{type:a,value:ak}]},{type:a,value:" - часть процесса, которая может выполняться параллельно с другими частями процесса. Он имеет свой собственный стек вызовов, но использует общее адресное пространство с другими потоками в пределах процесса."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[{type:a,value:I}]},{type:a,value:" ("},{type:b,tag:h,props:{},children:[{type:a,value:"Global Interpreter Lock"}]},{type:a,value:") - это механизм, используемый в интерпретаторе Python, который позволяет выполнять только один поток Python-кода в любой момент времени. "},{type:b,tag:i,props:{},children:[{type:a,value:I}]},{type:a,value:" не позволяет Python-интерпретатору эффективно использовать несколько ядер процессора, что ограничивает его многопоточные возможности."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[{type:a,value:"Многопоточность"}]},{type:a,value:" - это способность приложения работать с несколькими потоками выполнения. В Python, в силу GIL, многопоточность не всегда дает прирост производительности."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[{type:a,value:"Многопроцессность"}]},{type:a,value:" - это способность приложения работать с несколькими процессами выполнения, каждый из которых имеет свой собственный адресное пространство и может выполняться параллельно с другими процессами. В Python многопроцессность может привести к улучшению производительности, но может также потреблять больше ресурсов, чем многопоточность."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[{type:a,value:"Асинхронность"}]},{type:a,value:" в Python - это способ написания параллельного кода, который позволяет совершать несколько операций одновременно без использования "},{type:b,tag:i,props:{},children:[{type:a,value:"многопоточности"}]},{type:a,value:al},{type:b,tag:i,props:{},children:[{type:a,value:"многопроцессорности"}]},{type:a,value:m}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[{type:a,value:V}]},{type:a,value:" задачи являются теми, которые требуют много вычислительных ресурсов. Это могут быть задачи, связанные с математическими вычислениями, обработкой изображений, научными расчетами и т.д. В общем, CPU-bound задачи являются теми, которые требуют большого количества центрального процессорного времени (CPU time). Такие задачи могут быть довольно требовательными к ресурсам, и при их выполнении может возникнуть проблема с блокированием (blocking), когда вычисления занимают все доступные ресурсы и другие задачи не могут быть выполнены."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[{type:a,value:"I\u002FO-bound"}]},{type:a,value:"  задачи, напротив, связаны с операциями ввода-вывода (I\u002FO), такими как чтение и запись файлов, сетевые запросы, базы данных и т.д. Эти задачи требуют меньше вычислительных ресурсов, но могут занимать значительное количество времени на ожидание результатов операций ввода-вывода. Это может приводить к тому, что процессор простаивает в ожидании завершения операций ввода-вывода, и другие задачи не могут быть выполнены."}]},{type:a,value:f},{type:b,tag:H,props:{id:"модуль-threading"},children:[{type:b,tag:w,props:{ariaHidden:x,href:"#%D0%BC%D0%BE%D0%B4%D1%83%D0%BB%D1%8C-threading",tabIndex:y},children:[{type:b,tag:c,props:{className:[z,A]},children:[]}]},{type:a,value:B},{type:b,tag:i,props:{},children:[{type:a,value:"Threading"}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Модуль threading в Python предоставляет возможность создавать и управлять потоками выполнения внутри одного процесса. Он предоставляет высокоуровневый интерфейс для работы с потоками, что делает его более удобным и безопасным по сравнению с низкоуровневым модулем thread."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"С помощью модуля "},{type:b,tag:h,props:{},children:[{type:a,value:C}]},{type:a,value:" можно создавать потоки выполнения в "},{type:b,tag:n,props:{},children:[{type:a,value:t}]},{type:a,value:" и выполнять в них задачи параллельно с основным потоком. Каждый поток выполняется независимо и может иметь свои собственные переменные и выполнение кода."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Основные понятия, связанные с модулем threading:"}]},{type:a,value:f},{type:b,tag:"ul",props:{},children:[{type:a,value:f},{type:b,tag:J,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:ak}]},{type:a,value:" (Thread) - это легковесный процесс, который может быть запущен внутри другого процесса."}]},{type:a,value:f},{type:b,tag:J,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:am}]},{type:a,value:" - это объект, который может быть использован для синхронизации потоков выполнения. Он предоставляет механизмы для блокировки ресурсов, таких как переменные, и позволяет только одному потоку работать с ними в конкретный момент времени."}]},{type:a,value:f},{type:b,tag:J,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:an}]},{type:a,value:" - это объект, который может использоваться для оповещения одного или нескольких потоков о наступлении определенного события."}]},{type:a,value:f},{type:b,tag:J,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:ao}]},{type:a,value:" - это объект, который может использоваться для синхронизации потоков выполнения, основанных на условии. Он предоставляет механизмы для блокировки потоков до тех пор, пока определенное условие не будет выполнено."}]},{type:a,value:f},{type:b,tag:J,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:ap}]},{type:a,value:" - это объект используемый для ограничения количества потоков, которые могут получить доступ к ресурсам одновременно."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:B},{type:b,tag:i,props:{},children:[{type:a,value:C}]},{type:a,value:" также предоставляет механизмы для создания и управления потоками выполнения, такие как функции "},{type:b,tag:h,props:{},children:[{type:a,value:aq}]},{type:a,value:W},{type:b,tag:h,props:{},children:[{type:a,value:am}]},{type:a,value:W},{type:b,tag:h,props:{},children:[{type:a,value:an}]},{type:a,value:W},{type:b,tag:h,props:{},children:[{type:a,value:ao}]},{type:a,value:W},{type:b,tag:h,props:{},children:[{type:a,value:ap}]},{type:a,value:", которые могут быть использованы для создания многопоточных приложений."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Простой пример, который демонстрирует создание и запуск нескольких потоков в Python:"}]},{type:a,value:f},{type:b,tag:D,props:{className:[E]},children:[{type:b,tag:F,props:{className:[G,X]},children:[{type:b,tag:n,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:Y}]},{type:a,value:" threading\n\n"},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:K}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,Z]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,"triple-quoted-string",q]},children:[{type:a,value:"\"\"\"Функция, которую выполняет поток\"\"\""}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,_]},children:[{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"f\"Starting thread "}]},{type:b,tag:c,props:{className:[d,$]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aa}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:as}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,ac]},children:[{type:a,value:"# Некоторый полезный код"}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,_]},children:[{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"f\"Exiting thread "}]},{type:b,tag:c,props:{className:[d,$]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aa}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:as}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:au}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aw}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\"__main__\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,ac]},children:[{type:a,value:"# Создание потоков"}]},{type:a,value:"\n    threads "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:v}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ax}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ay}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:N}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:O}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,P]},children:[{type:a,value:"5"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n        t "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:v}]},{type:a,value:" threading"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"target"},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:v}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n        threads"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"t"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,ac]},children:[{type:a,value:"# Запуск потоков"}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:N}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:O}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aE},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"start"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,ac]},children:[{type:a,value:"# Ожидание завершения всех потоков"}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:N}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:O}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aE},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Вывод программы:"}]},{type:a,value:f},{type:b,tag:D,props:{className:[E]},children:[{type:b,tag:F,props:{className:[G,aF]},children:[{type:b,tag:n,props:{},children:[{type:a,value:"Starting thread Thread-5 (worker)\nExiting thread Thread-5 (worker)\nStarting thread Thread-6 (worker)\nExiting thread Thread-6 (worker)\nStarting thread Thread-7 (worker)\nExiting thread Thread-7 (worker)\nStarting thread Thread-8 (worker)\nExiting thread Thread-8 (worker)\nStarting thread Thread-9 (worker)\nExiting thread Thread-9 (worker)\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Как видно из примера, управление не будет передано другому потоку, пока текущий не будет закончен."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"В этом примере мы создаем пять потоков и запускаем каждый из них. Каждый поток выполняет функцию "},{type:b,tag:h,props:{},children:[{type:a,value:L}]},{type:a,value:", которая может содержать какой-то полезный код. После выполнения своей работы поток завершается. Запуская потоки в цикле, мы можем одновременно выполнять несколько задач. При необходимости мы можем дождаться завершения всех потоков с помощью метода "},{type:b,tag:h,props:{},children:[{type:a,value:ah}]},{type:a,value:m}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:B},{type:b,tag:i,props:{},children:[{type:a,value:C}]},{type:a,value:aG},{type:b,tag:n,props:{},children:[{type:a,value:t}]},{type:a,value:" используется для создания и управления потоками выполнения кода внутри одного процесса. Этот модуль удобен для выполнения задач, которые не блокируют поток выполнения, то есть не требуют ожидания завершения ввода-вывода "},{type:b,tag:h,props:{},children:[{type:a,value:"I\u002FO"}]},{type:a,value:m}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Однако, для выполнения "},{type:b,tag:h,props:{},children:[{type:a,value:V}]},{type:a,value:" задач, таких как математические вычисления, использование "},{type:b,tag:h,props:{},children:[{type:a,value:C}]},{type:a,value:" не будет эффективным, так как все потоки будут исполняться на одном физическом ядре, ввиду наличия в "},{type:b,tag:i,props:{},children:[{type:a,value:I}]},{type:a,value:m}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Вместо этого для выполнения "},{type:b,tag:h,props:{},children:[{type:a,value:V}]},{type:a,value:" задач рекомендуется использовать "},{type:b,tag:h,props:{},children:[{type:a,value:Q}]},{type:a,value:", которая позволяет распределять задачи на несколько физических ядер процессора."}]},{type:a,value:f},{type:b,tag:H,props:{id:"модуль-multiprocessing"},children:[{type:b,tag:w,props:{ariaHidden:x,href:"#%D0%BC%D0%BE%D0%B4%D1%83%D0%BB%D1%8C-multiprocessing",tabIndex:y},children:[{type:b,tag:c,props:{className:[z,A]},children:[]}]},{type:a,value:B},{type:b,tag:i,props:{},children:[{type:a,value:Q}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[{type:a,value:Q}]},{type:a,value:" - это модуль из стандартной библиотека "},{type:b,tag:n,props:{},children:[{type:a,value:t}]},{type:a,value:", который предоставляет возможности для работы с процессами и выполнения параллельных задач на многоядерных системах. Он предоставляет множество классов и методов для создания и управления процессами, а также обмена данными между ними."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Основными концепциями, используемыми в модуле "},{type:b,tag:i,props:{},children:[{type:a,value:Q}]},{type:a,value:", являются "},{type:b,tag:h,props:{},children:[{type:a,value:"процессы"}]},{type:a,value:ad},{type:b,tag:h,props:{},children:[{type:a,value:"очереди"}]},{type:a,value:m}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"Процессы"}]},{type:a,value:" - это отдельные исполняемые единицы, каждый из которых имеет свою собственную область памяти и может выполняться независимо от других процессов. Каждый процесс создается с помощью класса "},{type:b,tag:h,props:{},children:[{type:a,value:"Process"}]},{type:a,value:" позволяющий передать функцию, которую нужно выполнить в новом процессе."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"Очереди"}]},{type:a,value:" - это механизм, позволяющий процессам обмениваться данными между собой. Для этого в модуле multiprocessing предоставляется класс Queue, который реализует простую очередь FIFO (First In, First Out)."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Пример использования модуля multiprocessing:"}]},{type:a,value:f},{type:b,tag:D,props:{className:[E]},children:[{type:b,tag:F,props:{className:[G,X]},children:[{type:b,tag:n,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:Y}]},{type:a,value:" multiprocessing\n"},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:Y}]},{type:a,value:" time\n\n\n"},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:K}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,Z]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,_]},children:[{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"f'Starting worker "}]},{type:b,tag:c,props:{className:[d,$]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aa}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:aH}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n    time"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,P]},children:[{type:a,value:"2"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,_]},children:[{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"f'Finishing worker "}]},{type:b,tag:c,props:{className:[d,$]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aa}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:aH}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n\n\n"},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:au}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aw}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"'__main__'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n    num_workers "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:v}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,P]},children:[{type:a,value:"4"}]},{type:a,value:"\n    pool "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:v}]},{type:a,value:" multiprocessing"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"Pool"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:N}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:O}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n        pool"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"apply_async"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aK}]},{type:a,value:" args"},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"i"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"close"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"'All workers have finished'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Вывод прораммы:"}]},{type:a,value:f},{type:b,tag:D,props:{className:[E]},children:[{type:b,tag:F,props:{className:[G,aF]},children:[{type:b,tag:n,props:{},children:[{type:a,value:"Starting worker 0\nStarting worker 1\nStarting worker 2\nStarting worker 3\nFinishing worker 0\nFinishing worker 1\nFinishing worker 2\nFinishing worker 3\nAll workers have finished\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Из вывода, который предоставила программа, очевидно, что все процесссы работают паралельно."}]},{type:a,value:f},{type:b,tag:H,props:{id:"модуль-asyncio"},children:[{type:b,tag:w,props:{ariaHidden:x,href:"#%D0%BC%D0%BE%D0%B4%D1%83%D0%BB%D1%8C-asyncio",tabIndex:y},children:[{type:b,tag:c,props:{className:[z,A]},children:[]}]},{type:a,value:"Модуль Asyncio"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:R}]},{type:a,value:" (сокращение от Asynchronous I\u002FO) - это модуль в Python, который позволяет писать "},{type:b,tag:h,props:{},children:[{type:a,value:"асинхронный"}]},{type:a,value:" код для выполнения операций ввода-вывода (I\u002FO) и других задач в параллельных потоках. Это позволяет использовать один поток для обработки нескольких задач, что может улучшить производительность и использование ресурсов."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:B},{type:b,tag:i,props:{},children:[{type:a,value:S}]},{type:a,value:" стал стандартной частью языка Python начиная с версии "},{type:b,tag:i,props:{},children:[{type:a,value:"3.4"}]},{type:a,value:". Он предоставляет инфраструктуру для написания асинхронного кода в Python. До появления asyncio разработчики использовали различные сторонние библиотеки для написания асинхронного кода, такие как "},{type:b,tag:i,props:{},children:[{type:a,value:"Twisted"}]},{type:a,value:al},{type:b,tag:i,props:{},children:[{type:a,value:"Tornado"}]},{type:a,value:". Однако asyncio стал более удобным и единообразным решением для асинхронного программирования в Python."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"В "},{type:b,tag:i,props:{},children:[{type:a,value:R}]},{type:a,value:" существует несколько основных понятий:"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[{type:a,value:"Coroutines"}]},{type:a,value:" - это функции, которые используют ключевое слово "},{type:b,tag:h,props:{},children:[{type:a,value:T}]},{type:a,value:" вместо "},{type:b,tag:h,props:{},children:[{type:a,value:K}]},{type:a,value:", и вместо "},{type:b,tag:h,props:{},children:[{type:a,value:"return"}]},{type:a,value:" используют ключевое слово "},{type:b,tag:h,props:{},children:[{type:a,value:U}]},{type:a,value:", чтобы получить результат асинхронной операции."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[{type:a,value:"Event loop"}]},{type:a,value:" - это цикл, который запускает и управляет выполнением корутин. Он планирует выполнение задач и прерывает их выполнение, чтобы передать управление другим задачам. Это обеспечивает мультиплексирование ввода\u002Fвывода и позволяет выполнять асинхронный код без блокировки."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[{type:a,value:"Futures"}]},{type:a,value:" - это объекты, которые используются для передачи результатов от одной корутины к другой. Когда корутина ожидает результата асинхронной операции, она возвращает объект Future. Когда асинхронная операция завершается, результат записывается в этот объект."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[{type:a,value:"Task"}]},{type:a,value:" - это объект, который представляет конкретную корутину, запущенную в "},{type:b,tag:h,props:{},children:[{type:a,value:aM}]},{type:a,value:". Он содержит состояние выполнения, результат выполнения и другую информацию, необходимую для управления выполнением корутины."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[{type:a,value:"Coroutine function"}]},{type:a,value:" - это функция, которая возвращает корутину, но не запускает ее. Она может быть запущена в event loop с помощью функции asyncio.run()."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Асинхронные "},{type:b,tag:i,props:{},children:[{type:a,value:"итераторы"}]},{type:a,value:ad},{type:b,tag:i,props:{},children:[{type:a,value:"генераторы"}]},{type:a,value:" - это итераторы и генераторы, которые используются в асинхронном коде. Они позволяют перебирать элементы асинхронно, без блокировки."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[{type:a,value:"Синхронный код"}]},{type:a,value:" - это код, который блокирует выполнение программы до завершения операции ввода\u002Fвывода. В "},{type:b,tag:i,props:{},children:[{type:a,value:R}]},{type:a,value:" существуют средства для запуска синхронного кода в отдельном потоке или процессе, чтобы избежать блокировки "},{type:b,tag:i,props:{},children:[{type:a,value:aM}]},{type:a,value:m}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[{type:a,value:R}]},{type:a,value:" предоставляет эффективный способ написания асинхронного кода в Python и позволяет эффективно использовать ресурсы компьютера для выполнения задач."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:B},{type:b,tag:i,props:{},children:[{type:a,value:S}]},{type:a,value:aG},{type:b,tag:n,props:{},children:[{type:a,value:t}]},{type:a,value:" предоставляет асинхронную поддержку ввода\u002Fвывода и работу с сетью в одном потоке. С версии "},{type:b,tag:n,props:{},children:[{type:a,value:"Python 3.8"}]},{type:a,value:" в asyncio появились следующие новые возможности:"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"asyncio.run()"}]},{type:a,value:": это новая функция, которая запускает событийный цикл "},{type:b,tag:i,props:{},children:[{type:a,value:S}]},{type:a,value:" и ожидает завершения корутины, переданной ей в качестве аргумента."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"asyncio.create_task()"}]},{type:a,value:": это новая функция, которая создает и запускает корутину в фоновом режиме внутри событийного цикла asyncio. Она заменяет устаревшую функцию "},{type:b,tag:h,props:{},children:[{type:a,value:"asyncio.ensure_future()"}]},{type:a,value:m}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"asyncio.to_thread()"}]},{type:a,value:": это новая функция, которая запускает функцию в отдельном потоке и возвращает результат выполнения в корутине. Это полезно для выполнения блокирующих операций, которые могут заблокировать основной поток."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"asyncio.wait_for()"}]},{type:a,value:": это новая функция, которая используется для ожидания завершения корутины в течение определенного времени. Если корутина не завершается в течение указанного времени, возбуждается исключение "},{type:b,tag:i,props:{},children:[{type:a,value:"asyncio.TimeoutError"}]},{type:a,value:m}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"asyncio.run_coroutine_threadsafe()"}]},{type:a,value:": это новая функция, которая позволяет запускать корутину в отдельном потоке и возвращать результат в основной поток."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"asyncio.current_task()"}]},{type:a,value:": это новая функция, которая возвращает текущую корутину, которая выполняется в событийном цикле asyncio."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"asyncio.all_tasks()"}]},{type:a,value:": это новая функция, которая возвращает список всех запущенных задач (корутин и Future) в событийном цикле asyncio."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"asyncio.get_running_loop()"}]},{type:a,value:": это новая функция, которая возвращает текущий событийный цикл asyncio, который выполняется в текущем потоке."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"asyncio.create_unix_connection()"}]},{type:a,value:ad},{type:b,tag:h,props:{},children:[{type:a,value:"asyncio.create_unix_server()"}]},{type:a,value:": эти новые функции позволяют создавать соединения и сервера для работы с доменными сокетами UNIX."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"asyncio.start_tls()"}]},{type:a,value:": это новый метод для класса asyncio.StreamReaderProtocol, который позволяет установить защищенное SSL\u002FTLS соединение."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Эти новые функции и методы позволяют более эффективно использовать "},{type:b,tag:i,props:{},children:[{type:a,value:S}]},{type:a,value:" для разработки асинхронных приложений в "},{type:b,tag:n,props:{},children:[{type:a,value:t}]},{type:a,value:m}]},{type:a,value:f},{type:b,tag:D,props:{className:[E]},children:[{type:b,tag:F,props:{className:[G,X]},children:[{type:b,tag:n,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:Y}]},{type:a,value:" asyncio\n\n"},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:T}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:K}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,Z]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\"Hello\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:U}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,P]},children:[{type:a,value:"1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\"World\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:T}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:K}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,Z]},children:[{type:a,value:aP}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n    tasks "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:v}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ax}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ay}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:N}]},{type:a,value:" _ "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:O}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,P]},children:[{type:a,value:"3"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n        tasks"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"create_task"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:U}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"gather"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"*"}]},{type:a,value:"tasks"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n\nasyncio"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"run"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Вывод программы"}]},{type:a,value:f},{type:b,tag:D,props:{className:[E]},children:[{type:b,tag:F,props:{className:[G,X]},children:[{type:b,tag:n,props:{},children:[{type:a,value:"Hello\nHello\nHello\nWorld\nWorld\nWorld\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:T}]},{type:a,value:ad},{type:b,tag:h,props:{},children:[{type:a,value:U}]},{type:a,value:" - это ключевые слова в "},{type:b,tag:n,props:{},children:[{type:a,value:t}]},{type:a,value:", которые используются для написания асинхронного кода с использованием asyncio библиотеки."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:T}]},{type:a,value:" используется для определения функций, которые могут быть выполнены асинхронно, то есть без блокирования вызывающего потока, позволяя ему продолжать работу во время выполнения этой функции."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:U}]},{type:a,value:" используется для ожидания выполнения асинхронной операции, которая может занять некоторое время. Оно блокирует выполнение текущей функции до тех пор, пока результат не будет готов, и позволяет другим операциям работать в это время."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Вместе они позволяют писать асинхронный код, который может быть выполнен более эффективно, чем традиционный синхронный код. Они могут быть использованы для написания быстрого, отзывчивого приложения, которое может обрабатывать множество запросов одновременно."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"В этом примере мы создаем три корутины, каждая из которых печатает \"Hello\", ждет одну секунду и затем печатает \"World\". Затем мы создаем задачи для каждой корутины и запускаем их в цикле событий, используя функцию "},{type:b,tag:h,props:{},children:[{type:a,value:"asyncio.gather()"}]},{type:a,value:", которая ожидает завершения всех задач."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[{type:a,value:R}]},{type:a,value:" позволяет эффективно использовать ресурсы компьютера для выполнения задач в параллельных потоках, особенно для операций ввода-вывода. Однако для "},{type:b,tag:i,props:{},children:[{type:a,value:"CPU"}]},{type:a,value:"-bound задач, которые требуют большого количества вычислительных ресурсов, более эффективным может быть использование модуля "},{type:b,tag:h,props:{},children:[{type:a,value:Q}]},{type:a,value:m}]},{type:a,value:f},{type:b,tag:H,props:{id:"заключение"},children:[{type:b,tag:w,props:{ariaHidden:x,href:"#%D0%B7%D0%B0%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%BD%D0%B8%D0%B5",tabIndex:y},children:[{type:b,tag:c,props:{className:[z,A]},children:[]}]},{type:a,value:"Заключение"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"В заключении можно сказать, что многопоточность, асинхронность и многопроцессорность являются важными инструментами для эффективной работы с вычислительными задачами в "},{type:b,tag:n,props:{},children:[{type:a,value:t}]},{type:a,value:". Каждый из этих подходов имеет свои преимущества и недостатки, и выбор наиболее подходящего зависит от конкретной задачи."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Многопоточность позволяет ускорить выполнение "},{type:b,tag:i,props:{},children:[{type:a,value:ai}]},{type:a,value:"-bound задач и использовать многопроцессорность, но сталкивается с ограничениями "},{type:b,tag:i,props:{},children:[{type:a,value:I}]},{type:a,value:", что может привести к снижению производительности в случае CPU-bound задач."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Многопроцессорность решает проблему "},{type:b,tag:i,props:{},children:[{type:a,value:I}]},{type:a,value:" и позволяет эффективно использовать все ядра процессора для "},{type:b,tag:h,props:{},children:[{type:a,value:V}]},{type:a,value:" задач, но также имеет дополнительные накладные расходы на создание и управление процессами."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Асинхронность позволяет эффективно управлять "},{type:b,tag:i,props:{},children:[{type:a,value:ai}]},{type:a,value:"-bound задачами, не блокируя основной поток выполнения, что повышает отзывчивость приложения, но может столкнуться с проблемой блокировок при работе с неблокирующими "},{type:b,tag:i,props:{},children:[{type:a,value:ai}]},{type:a,value:"-операциями."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Таким образом, для достижения максимальной производительности и эффективности в "},{type:b,tag:n,props:{},children:[{type:a,value:t}]},{type:a,value:", необходимо выбирать подход, который наилучшим образом соответствует требованиям конкретной задачи."}]}]},createdAt:aQ,updatedAt:aQ}],articles:[]},projects:{project:ae,projects:[]},store:{}},serverRendered:true,routePath:"\u002Farticles\u002Fasync_threadind_multiprocessing",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:ae},content:{dbHash:"db78faee"}}}}("text","element","span","token","punctuation","\n","p","em","strong","(",")","keyword",".","code","\n    "," ","string",":","operator","Python","print","=","a","true",-1,"icon","icon-link","Модуль ","threading","div","nuxt-content-highlight","pre","line-numbers","h2","GIL","li","def","worker","name","for","in","number","multiprocessing","Asyncio","asyncio","async","await","CPU-bound",", ","language-python","import","function","string-interpolation","interpolation","{","}","comment"," и ",null,"builtin","range","join","IO","Многопоточность, асинхронность и многопроцессорность в Python","Поток"," или ","Lock","Event","Condition","Semaphore","Thread","current_thread","\"","\n\n","if"," __name__ ","==","[","]"," i ","append","\n\n    "," t "," threads","\n        t","language-text"," в ","'","sleep","num_workers",",","\n    pool","event loop","say_hello"," asyncio","main","2023-04-28T09:57:06.242Z"));